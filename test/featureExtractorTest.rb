# -*- coding: utf-8 -*-
require 'test/unit'
require File.join(File.dirname(__FILE__), '../src/featureExtractor.rb')

class FeatureExtractorTest < Test::Unit::TestCase

  def test_extractNoun_human
    #echo "太郎は将来エンジニアになるのが夢だ。" | juman | knp -tab
    knpLines=<<ENDOFKNP
* 2D <文頭><人名><ハ><助詞><体言><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><正規化代表表記:太郎/たろう><主辞代表表記:太郎/たろう>
+ 3D <文頭><人名><ハ><助詞><体言><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><名詞項候補><先行詞候補><SM-人><SM-主体><正規化代表表記:太郎/たろう><解析格:ガ>
太郎 たろう 太郎 名詞 6 人名 5 * 0 * 0 "人名:日本:名:45:0.00106 疑似代表表記 代表表記:太郎/たろう" <人名:日本:名:45:0.00106><疑似代表表記><代表表記:太郎/たろう><正規化代表表記:太郎/たろう><文頭><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><固有キー><文節主辞>
は は は 助詞 9 副助詞 2 * 0 * 0 NIL <かな漢字><ひらがな><付属>
* 2D <未来句><ニ><助詞><体言><係:ニ格><区切:0-0><格要素><連用要素><正規化代表表記:将来/しょうらい+エンジニア/えんじにあ><主辞代表表記:エンジニア/えんじにあ>
+ 2D <文節内><係:文節内><時間><未来句><体言><名詞項候補><先行詞候補><正規化代表表記:将来/しょうらい>
将来 しょうらい 将来 名詞 6 時相名詞 10 * 0 * 0 "代表表記:将来/しょうらい 弱時相名詞 カテゴリ:時間" <代表表記:将来/しょうらい><弱時相名詞><カテゴリ:時間><正規化代表表記:将来/しょうらい><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始>
+ 3D <未来句><ニ><助詞><体言><係:ニ格><区切:0-0><格要素><連用要素><SM-主体><SM-人><名詞項候補><先行詞候補><正規化代表表記:エンジニア/えんじにあ><解析格:ニ>
エンジニア えんじにあ エンジニア 名詞 6 普通名詞 1 * 0 * 0 "代表表記:エンジニア/えんじにあ カテゴリ:人 ドメイン:科学・技術" <代表表記:エンジニア/えんじにあ><カテゴリ:人><ドメイン:科学・技術><正規化代表表記:エンジニア/えんじにあ><記英数カ><カタカナ><名詞相当語><自立><複合←><内容語><タグ単位始><固有キー><文節主辞>
に に に 助詞 9 格助詞 1 * 0 * 0 NIL <かな漢字><ひらがな><付属>
* 3D <形副名詞><ガ><助詞><強調構文><用言:動><タグ単位受:-1><係:ガ格><レベル:B><区切:3-5><ID:〜の〜><提題受:10><格要素><連用要素><動態述語><正規化代表表記:成る/なる?鳴る/なる><主辞代表表記:成る/なる?鳴る/なる>
+ 4D <文節内><係:文節内><連体修飾><用言:動><動態述語><強調構文><格要素指定:2><正規化代表表記:成る/なる?鳴る/なる><用言代表表記:成る/なる?鳴る/なる><時制-未来><格関係0:ガ:太郎><格関係2:ニ:エンジニア><格関係5:ヲ:夢><格解析結果:成る/なる:動11:ガ/N/太郎/0/0/1;ヲ/N/夢/5/0/1;ニ/C/エンジニア/2/0/1;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;時間/U/-/-/-/-;外の関係/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;ニヨル/U/-/-/-/->
なる なる なる 動詞 2 * 0 子音動詞ラ行 10 基本形 2 "代表表記:成る/なる 自他動詞:他:成す/なす;他:する/する" <代表表記:成る/なる><自他動詞:他:鳴らす/ならす><正規化代表表記:成る/なる?鳴る/なる><品曖><ALT-なる-なる-なる-2-0-10-2-"代表表記:鳴る/なる 自他動詞:他:鳴らす/ならす"><品曖-動詞><原形曖昧><かな漢字><ひらがな><活用語><自立><内容語><タグ単位始><文節始><文節主辞><用言曖昧性解消>
+ 5D <形副名詞><ガ><助詞><強調構文><タグ単位受:-1><係:ガ格><レベル:B><区切:3-5><ID:〜の〜><提題受:10><格要素><連用要素><動態述語><外の関係><受けNONE><解析格:ガ>
の の の 名詞 6 形式名詞 8 * 0 * 0 "疑似代表表記 代表表記:の/の" <疑似代表表記><代表表記:の/の><正規化代表表記:の/の><かな漢字><ひらがな><名詞相当語><形副名詞><付属><特殊非見出語><内容語><タグ単位始>
が が が 助詞 9 格助詞 1 * 0 * 0 NIL <かな漢字><ひらがな><付属>
* -1D <文末><ルール外の関係><句点><体言><用言:判><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><係:文末><提題受:30><主節><格要素><連用要素><状態述語><正規化代表表記:夢/ゆめ><主辞代表表記:夢/ゆめ>
+ -1D <文末><ルール外の関係><句点><体言><用言:判><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><係:文末><提題受:30><主節><格要素><連用要素><状態述語><判定詞><名詞項候補><先行詞候補><正規化代表表記:夢/ゆめ><用言代表表記:夢/ゆめ><時制-現在><時制-無時制><解析連格:ヲ><格関係4:ガ:の><格解析結果:夢/ゆめ:判1:ガ/C/の/4/0/1;ヲ/U/-/-/-/-;ニ/U/-/-/-/-;ト/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;時間/U/-/-/-/-;外の関係/U/-/-/-/-;ノ/U/-/-/-/-;修飾/U/-/-/-/-;ガ２/U/-/-/-/->
夢 ゆめ 夢 名詞 6 普通名詞 1 * 0 * 0 "代表表記:夢/ゆめ 漢字読み:訓 カテゴリ:抽象物 ドメイン:家庭・暮らし" <代表表記:夢/ゆめ><漢字読み:訓><カテゴリ:抽象物><ドメイン:家庭・暮らし><正規化代表表記:夢/ゆめ><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><文節主辞>
だ だ だ 判定詞 4 * 0 判定詞 25 基本形 2 NIL <表現文末><かな漢字><ひらがな><活用語><付属>
。 。 。 特殊 1 句点 1 * 0 * 0 NIL <文末><英記号><記号><付属>
EOS
ENDOFKNP
    featureExtractor = FeatureExtractor.new("pseudoID", knpLines.split("\n"))
    assert_equal(["太郎:人名", "エンジニア:人"], featureExtractor.nounList)
  end

  
  def test_extractNoun_animal
    #echo "太郎は猫と遊んでいる。" | juman | knp -tab
    knpLines=<<ENDOFKNP
* 2D <文頭><人名><ハ><助詞><体言><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><正規化代表表記:太郎/たろう><主辞代表表記:太郎/たろう>
+ 2D <文頭><人名><ハ><助詞><体言><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><名詞項候補><先行詞候補><SM-人><SM-主体><正規化代表表記:太郎/たろう><解析格:ガ>
太郎 たろう 太郎 名詞 6 人名 5 * 0 * 0 "人名:日本:名:45:0.00106 疑似代表表記 代表表記:太郎/たろう" <人名:日本:名:45:0.00106><疑似代表表記><代表表記:太郎/たろう><正規化代表表記:太郎/たろう><文頭><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><固有キー><文節主辞>
は は は 助詞 9 副助詞 2 * 0 * 0 NIL <かな漢字><ひらがな><付属>
* 2D <ト><助詞><体言><一文字漢字><係:ト格><並キ:名:&ST:5.0><区切:1-4><並列タイプ:AND><格要素><連用要素><正規化代表表記:猫/ねこ><主辞代表表記:猫/ねこ><並列類似度:-100.000>
+ 2D <ト><助詞><体言><一文字漢字><係:ト格><並キ:名:&ST:5.0><区切:1-4><並列タイプ:AND><格要素><連用要素><名詞項候補><先行詞候補><正規化代表表記:猫/ねこ><解析格:ト>
猫 ねこ 猫 名詞 6 普通名詞 1 * 0 * 0 "代表表記:猫/ねこ 漢字読み:訓 カテゴリ:動物" <代表表記:猫/ねこ><漢字読み:訓><カテゴリ:動物><正規化代表表記:猫/ねこ><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><文節主辞>
と と と 助詞 9 格助詞 1 * 0 * 0 NIL <かな漢字><ひらがな><付属>
* -1D <文末><句点><用言:動><レベル:C><区切:5-5><ID:（文末）><係:文末><提題受:30><主節><格要素><連用要素><動態述語><正規化代表表記:遊ぶ/あそぶ><主辞代表表記:遊ぶ/あそぶ>
+ -1D <文末><句点><用言:動><レベル:C><区切:5-5><ID:（文末）><係:文末><提題受:30><主節><格要素><連用要素><動態述語><正規化代表表記:遊ぶ/あそぶ><用言代表表記:遊ぶ/あそぶ><時制-未来><主題格:一人称優位><格関係0:ガ:太郎><格関係1:ト:猫><格解析結果:遊ぶ/あそぶ:動1:ガ/N/太郎/0/0/1;ヲ/U/-/-/-/-;ニ/U/-/-/-/-;ト/C/猫/1/0/1;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;マデ/U/-/-/-/-;ヘ/U/-/-/-/-;時間/U/-/-/-/-;外の関係/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;トスル/U/-/-/-/-;ヲフクメル/U/-/-/-/-;ニヨル/U/-/-/-/-;トイウ/U/-/-/-/-;ニツク/U/-/-/-/-;ニアワセル/U/-/-/-/-;ヲツウジル/U/-/-/-/->
遊んで あそんで 遊ぶ 動詞 2 * 0 子音動詞バ行 8 タ系連用テ形 14 "代表表記:遊ぶ/あそぶ ドメイン:レクリエーション" <代表表記:遊ぶ/あそぶ><ドメイン:レクリエーション><正規化代表表記:遊ぶ/あそぶ><かな漢字><活用語><自立><内容語><タグ単位始><文節始><文節主辞>
いる いる いる 接尾辞 14 動詞性接尾辞 7 母音動詞 1 基本形 2 "代表表記:いる/いる" <代表表記:いる/いる><正規化代表表記:いる/いる><表現文末><かな漢字><ひらがな><活用語><付属>
。 。 。 特殊 1 句点 1 * 0 * 0 NIL <文末><英記号><記号><付属>
EOS
ENDOFKNP
    featureExtractor = FeatureExtractor.new("pseudoID", knpLines.split("\n"))
    assert_equal(["太郎:人名", "猫:動物"], featureExtractor.nounList)
  end
  
  def test_getModifier
    knpLines = <<ENDOFKNP
* 1D <文頭><連体修飾><用言:形><係:連格><レベル:B-><区切:0-5><ID:（形判連体）><連体節><状態 述語><正規化代表表記:大きい/おおきい><主辞代表表記:大きい/おおきい>
+ 1D <文頭><連体修飾><用言:形><係:連格><レベル:B-><区切:0-5><ID:（形判連体）><連体節><状態 述語><正規化代表表記:大きい/おおきい><用言代表表記:大きい/おおきい><時制-現在><時制-無時制><格関係1:ガ:人><格解析結果:大きい/おおきい:形34:ガ/N/人/1/0/1;ニ/U/-/-/-/-;デ/U/-/-/-/-;ヨ リ/U/-/-/-/-;外の関係/U/-/-/-/-;ノ/U/-/-/-/-;修飾/U/-/-/-/-;ニカンスル/U/-/-/-/->
大きい おおきい 大きい 形容詞 3 * 0 イ形容詞イ段特殊 20 基本形 2 "代表表記:大きい/おおきい 反義:形容詞:小さい/ちいさい" <代表表記:大きい/おおきい><反義:形容詞:小さい/ちいさい><正規化代表表記:大きい/おおきい><文頭><かな漢字><活用語><自立><内容語><タグ単位始><文節始><文節主 辞>
* -1D <文末><SM-主体><SM-人><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><正規化代表表記:人/じん?人/ひと><主辞代表表記:人/じん?人/ひと>
+ -1D <文末><SM-主体><SM-人><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><判定詞><名詞項候補><先行詞候補><正規化代表表記:人/じん?人/ひと><用言代表表記:人/じん?人/ひと><時制-無時制><解析連格:ガ><格解析結果:人/ひと:判0:ガ/U/-/-/-/-;ニ/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;時間/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;ガ２/U/-/-/-/-;ニトル/U/-/-/-/-;トスル/U/-/-/-/-;ヲフクメル/U/-/-/-/-;外の関係/U/-/-/-/->
人 じん 人 名詞 6 普通名詞 1 * 0 * 0 "代表表記:人/じん 漢字読み:音 カテゴリ:人" <代表表記: 人/じん><漢字読み:音><カテゴリ:人><正規化代表表記:人/じん?人/ひと><品曖><ALT-人-ひと-人-6-1-0-0-"代表表記:人/ひと 漢字読み:訓 カテゴリ:人"><品曖-普通名詞><原形曖昧><文末><表現文末>< 漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><文節主辞><名詞曖昧性解消>
EOS
ENDOFKNP
    featureExtractor = FeatureExtractor.new("pseudoID", knpLines.split("\n"))
    assert_equal(["+ 1D <文頭><連体修飾><用言:形><係:連格><レベル:B-><区切:0-5><ID:（形判連体）><連体節><状態 述語><正規化代表表記:大きい/おおきい><用言代表表記:大きい/おおきい><時制-現在><時制-無時制><格関係1:ガ:人><格解析結果:大きい/おおきい:形34:ガ/N/人/1/0/1;ニ/U/-/-/-/-;デ/U/-/-/-/-;ヨ リ/U/-/-/-/-;外の関係/U/-/-/-/-;ノ/U/-/-/-/-;修飾/U/-/-/-/-;ニカンスル/U/-/-/-/->"], featureExtractor.getModifier("+ -1D <文末><SM-主体><SM-人><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><判定詞><名詞項候補><先行詞候補><正規化代表表記:人/じん?人/ひと><用言代表表記:人/じん?人/ひと><時制-無時制><解析連格:ガ><格解析結果:人/ひと:判0:ガ/U/-/-/-/-;ニ/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;時間/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;ガ２/U/-/-/-/-;ニトル/U/-/-/-/-;トスル/U/-/-/-/-;ヲフクメル/U/-/-/-/-;外の関係/U/-/-/-/->"))
    assert_equal(nil, featureExtractor.getModifier("* 1D <文頭><連体修飾><用言:形><係:連格><レベル:B-><区切:0-5><ID:（形判連体）><連体節><状態 述語><正規化代表表記:大きい/おおきい><主辞代表表記:大きい/おおきい>"))
  end

  def test_getModifiee
    knpLines = <<ENDOFKNP
* 1D <文頭><連体修飾><用言:形><係:連格><レベル:B-><区切:0-5><ID:（形判連体）><連体節><状態 述語><正規化代表表記:大きい/おおきい><主辞代表表記:大きい/おおきい>
+ 1D <文頭><連体修飾><用言:形><係:連格><レベル:B-><区切:0-5><ID:（形判連体）><連体節><状態 述語><正規化代表表記:大きい/おおきい><用言代表表記:大きい/おおきい><時制-現在><時制-無時制><格関係1:ガ:人><格解析結果:大きい/おおきい:形34:ガ/N/人/1/0/1;ニ/U/-/-/-/-;デ/U/-/-/-/-;ヨ リ/U/-/-/-/-;外の関係/U/-/-/-/-;ノ/U/-/-/-/-;修飾/U/-/-/-/-;ニカンスル/U/-/-/-/->
大きい おおきい 大きい 形容詞 3 * 0 イ形容詞イ段特殊 20 基本形 2 "代表表記:大きい/おおきい 反義:形容詞:小さい/ちいさい" <代表表記:大きい/おおきい><反義:形容詞:小さい/ちいさい><正規化代表表記:大きい/おおきい><文頭><かな漢字><活用語><自立><内容語><タグ単位始><文節始><文節主 辞>
* -1D <文末><SM-主体><SM-人><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><正規化代表表記:人/じん?人/ひと><主辞代表表記:人/じん?人/ひと>
+ -1D <文末><SM-主体><SM-人><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><判定詞><名詞項候補><先行詞候補><正規化代表表記:人/じん?人/ひと><用言代表表記:人/じん?人/ひと><時制-無時制><解析連格:ガ><格解析結果:人/ひと:判0:ガ/U/-/-/-/-;ニ/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;時間/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;ガ２/U/-/-/-/-;ニトル/U/-/-/-/-;トスル/U/-/-/-/-;ヲフクメル/U/-/-/-/-;外の関係/U/-/-/-/->
人 じん 人 名詞 6 普通名詞 1 * 0 * 0 "代表表記:人/じん 漢字読み:音 カテゴリ:人" <代表表記: 人/じん><漢字読み:音><カテゴリ:人><正規化代表表記:人/じん?人/ひと><品曖><ALT-人-ひと-人-6-1-0-0-"代表表記:人/ひと 漢字読み:訓 カテゴリ:人"><品曖-普通名詞><原形曖昧><文末><表現文末>< 漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><文節主辞><名詞曖昧性解消>
EOS
ENDOFKNP
    featureExtractor = FeatureExtractor.new("pseudoID", knpLines.split("\n"))
    assert_equal("+ -1D <文末><SM-主体><SM-人><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><判定詞><名詞項候補><先行詞候補><正規化代表表記:人/じん?人/ひと><用言代表表記:人/じん?人/ひと><時制-無時制><解析連格:ガ><格解析結果:人/ひと:判0:ガ/U/-/-/-/-;ニ/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;時間/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;ガ２/U/-/-/-/-;ニトル/U/-/-/-/-;トスル/U/-/-/-/-;ヲフクメル/U/-/-/-/-;外の関係/U/-/-/-/->", featureExtractor.getModifiee("+ 1D <文頭><連体修飾><用言:形><係:連格><レベル:B-><区切:0-5><ID:（形判連体）><連体節><状態 述語><正規化代表表記:大きい/おおきい><用言代表表記:大きい/おおきい><時制-現在><時制-無時制><格関係1:ガ:人><格解析結果:大きい/おおきい:形34:ガ/N/人/1/0/1;ニ/U/-/-/-/-;デ/U/-/-/-/-;ヨ リ/U/-/-/-/-;外の関係/U/-/-/-/-;ノ/U/-/-/-/-;修飾/U/-/-/-/-;ニカンスル/U/-/-/-/->"))
    assert_equal("* -1D <文末><SM-主体><SM-人><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><正規化代表表記:人/じん?人/ひと><主辞代表表記:人/じん?人/ひと>", featureExtractor.getModifiee("* 1D <文頭><連体修飾><用言:形><係:連格><レベル:B-><区切:0-5><ID:（形判連体）><連体節><状態 述語><正規化代表表記:大きい/おおきい><主辞代表表記:大きい/おおきい>"))
    assert_equal(nil , featureExtractor.getModifiee("* -1D <文末><SM-主体><SM-人><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><正規化代表表記:人/じん?人/ひと><主辞代表表記:人/じん?人/ひと>"))
  end

  def test_getModifieeIndex
    assert_equal(1, getModifieeIndex("* 1D <文頭><連体修飾><用言:形><係:連格><レベル:B-><区切:0-5><ID:（形判連体）><連体節><状態 述語><正規化代表表記:大きい/おおきい><主辞代表表記:大きい/おおきい>"))
    assert_equal(-1, getModifieeIndex("+ -1D <文末><SM-主体><SM-人><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><判定詞><名詞項候補><先行詞候補><正規化代表表記:人/じん?人/ひと><用言代表表記:人/じん?人/ひと><時制-無時制><解析連格:ガ><格解析結果:人/ひと:判0:ガ/U/-/-/-/-;ニ/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;時間/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;ガ２/U/-/-/-/-;ニトル/U/-/-/-/-;トスル/U/-/-/-/-;ヲフクメル/U/-/-/-/-;外の関係/U/-/-/-/->"))
  end

  def test_getChunkArray
    knpLines = <<ENDOFKNP
* 1D <文頭><連体修飾><用言:形><係:連格><レベル:B-><区切:0-5><ID:（形判連体）><連体節><状態 述語><正規化代表表記:大きい/おおきい><主辞代表表記:大きい/おおきい>
+ 1D <文頭><連体修飾><用言:形><係:連格><レベル:B-><区切:0-5><ID:（形判連体）><連体節><状態 述語><正規化代表表記:大きい/おおきい><用言代表表記:大きい/おおきい><時制-現在><時制-無時制><格関係1:ガ:人><格解析結果:大きい/おおきい:形34:ガ/N/人/1/0/1;ニ/U/-/-/-/-;デ/U/-/-/-/-;ヨ リ/U/-/-/-/-;外の関係/U/-/-/-/-;ノ/U/-/-/-/-;修飾/U/-/-/-/-;ニカンスル/U/-/-/-/->
大きい おおきい 大きい 形容詞 3 * 0 イ形容詞イ段特殊 20 基本形 2 "代表表記:大きい/おおきい 反義:形容詞:小さい/ちいさい" <代表表記:大きい/おおきい><反義:形容詞:小さい/ちいさい><正規化代表表記:大きい/おおきい><文頭><かな漢字><活用語><自立><内容語><タグ単位始><文節始><文節主 辞>
* -1D <文末><SM-主体><SM-人><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><正規化代表表記:人/じん?人/ひと><主辞代表表記:人/じん?人/ひと>
+ -1D <文末><SM-主体><SM-人><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><判定詞><名詞項候補><先行詞候補><正規化代表表記:人/じん?人/ひと><用言代表表記:人/じん?人/ひと><時制-無時制><解析連格:ガ><格解析結果:人/ひと:判0:ガ/U/-/-/-/-;ニ/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;時間/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;ガ２/U/-/-/-/-;ニトル/U/-/-/-/-;トスル/U/-/-/-/-;ヲフクメル/U/-/-/-/-;外の関係/U/-/-/-/->
人 じん 人 名詞 6 普通名詞 1 * 0 * 0 "代表表記:人/じん 漢字読み:音 カテゴリ:人" <代表表記: 人/じん><漢字読み:音><カテゴリ:人><正規化代表表記:人/じん?人/ひと><品曖><ALT-人-ひと-人-6-1-0-0-"代表表記:人/ひと 漢字読み:訓 カテゴリ:人"><品曖-普通名詞><原形曖昧><文末><表現文末>< 漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><文節主辞><名詞曖昧性解消>
EOS
ENDOFKNP
    featureExtractor = FeatureExtractor.new("pseudoID", knpLines.split("\n"))
    chunkArray1 = featureExtractor.getChunkArray("* 1D <文頭><連体修飾><用言:形><係:連格><レベル:B-><区切:0-5><ID:（形判連体）><連体節><状態 述語><正規化代表表記:大きい/おおきい><主辞代表表記:大きい/おおきい>")
    assert_equal(["* 1D <文頭><連体修飾><用言:形><係:連格><レベル:B-><区切:0-5><ID:（形判連体）><連体節><状態 述語><正規化代表表記:大きい/おおきい><主辞代表表記:大きい/おおきい>", "* -1D <文末><SM-主体><SM-人><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><正規化代表表記:人/じん?人/ひと><主辞代表表記:人/じん?人/ひと>"], chunkArray1)

    chunkArray2 = featureExtractor.getChunkArray("+ -1D <文末><SM-主体><SM-人><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><判定詞><名詞項候補><先行詞候補><正規化代表表記:人/じん?人/ひと><用言代表表記:人/じん?人/ひと><時制-無時制><解析連格:ガ><格解析結果:人/ひと:判0:ガ/U/-/-/-/-;ニ/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;時間/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;ガ２/U/-/-/-/-;ニトル/U/-/-/-/-;トスル/U/-/-/-/-;ヲフクメル/U/-/-/-/-;外の関係/U/-/-/-/->")
    assert_equal(["+ 1D <文頭><連体修飾><用言:形><係:連格><レベル:B-><区切:0-5><ID:（形判連体）><連体節><状態 述語><正規化代表表記:大きい/おおきい><用言代表表記:大きい/おおきい><時制-現在><時制-無時制><格関係1:ガ:人><格解析結果:大きい/おおきい:形34:ガ/N/人/1/0/1;ニ/U/-/-/-/-;デ/U/-/-/-/-;ヨ リ/U/-/-/-/-;外の関係/U/-/-/-/-;ノ/U/-/-/-/-;修飾/U/-/-/-/-;ニカンスル/U/-/-/-/->", "+ -1D <文末><SM-主体><SM-人><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><判定詞><名詞項候補><先行詞候補><正規化代表表記:人/じん?人/ひと><用言代表表記:人/じん?人/ひと><時制-無時制><解析連格:ガ><格解析結果:人/ひと:判0:ガ/U/-/-/-/-;ニ/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;時間/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;ガ２/U/-/-/-/-;ニトル/U/-/-/-/-;トスル/U/-/-/-/-;ヲフクメル/U/-/-/-/-;外の関係/U/-/-/-/->"], chunkArray2)

  end


  def test_getAstChunk
    knpLines = <<ENDOFKNP
* -1D <文頭><文末><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><正規化代表表記:本/ほん><主辞代表表記:本/ほん>
+ -1D <文頭><文末><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><判定詞><名詞項候補><先行詞候補><正規化代表表記:本/ほん><用言代表表記:本/ほん><時制-無時制><格解析結果:本/ほん:判0:ガ/U/-/-/-/-;ヲ/U/-/-/-/-;ニ/U/-/-/-/-;ト/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;マデ/U/-/-/-/-;ヘ/U/-/-/-/-;時間/U/-/-/-/-;外の関係/U/-/-/-/-;ノ/U/-/-/-/-;修飾/U/-/-/-/-;ガ２/U/-/-/-/-;ニトル/U/-/-/-/-;トスル/U/-/-/-/-;ニツク/U/-/-/-/-;ヲノゾク/U/-/-/-/-;ニヨル/U/-/-/-/-;ヲフクメル/U/-/-/-/->
本 ほん 本 名詞 6 普通名詞 1 * 0 * 0 "代表表記:本/ほん 漢字読み:音 カテゴリ:人工物-その他; 抽象物" <代表表記:本/ほん><漢字読み:音><カテゴリ:人工物-その他;抽象物><正規化代表表記:本/ほん><文頭><文末><表現文末><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><文 節主辞>
EOS
ENDOFKNP
    featureExtractor = FeatureExtractor.new("pseudoID", knpLines.split("\n"))
    assert_equal(["* -1D <文頭><文末><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><正規化代表表記:本/ほん><主辞代表表記:本/ほん>"], featureExtractor.getAstChunks("本"))
  end

  def test_getPlusChunks
    knpLines = <<ENDOFKNP
* -1D <文頭><文末><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><正規化代表表記:本/ほん><主辞代表表記:本/ほん>
+ -1D <文頭><文末><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><判定詞><名詞項候補><先行詞候補><正規化代表表記:本/ほん><用言代表表記:本/ほん><時制-無時制><格解析結果:本/ほん:判0:ガ/U/-/-/-/-;ヲ/U/-/-/-/-;ニ/U/-/-/-/-;ト/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;マデ/U/-/-/-/-;ヘ/U/-/-/-/-;時間/U/-/-/-/-;外の関係/U/-/-/-/-;ノ/U/-/-/-/-;修飾/U/-/-/-/-;ガ２/U/-/-/-/-;ニトル/U/-/-/-/-;トスル/U/-/-/-/-;ニツク/U/-/-/-/-;ヲノゾク/U/-/-/-/-;ニヨル/U/-/-/-/-;ヲフクメル/U/-/-/-/->
本 ほん 本 名詞 6 普通名詞 1 * 0 * 0 "代表表記:本/ほん 漢字読み:音 カテゴリ:人工物-その他; 抽象物" <代表表記:本/ほん><漢字読み:音><カテゴリ:人工物-その他;抽象物><正規化代表表記:本/ほん><文頭><文末><表現文末><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><文 節主辞>
EOS
ENDOFKNP
    featureExtractor = FeatureExtractor.new("pseudoID", knpLines.split("\n"))
    assert_equal(["+ -1D <文頭><文末><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><判定詞><名詞項候補><先行詞候補><正規化代表表記:本/ほん><用言代表表記:本/ほん><時制-無時制><格解析結果:本/ほん:判0:ガ/U/-/-/-/-;ヲ/U/-/-/-/-;ニ/U/-/-/-/-;ト/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;マデ/U/-/-/-/-;ヘ/U/-/-/-/-;時間/U/-/-/-/-;外の関係/U/-/-/-/-;ノ/U/-/-/-/-;修飾/U/-/-/-/-;ガ２/U/-/-/-/-;ニトル/U/-/-/-/-;トスル/U/-/-/-/-;ニツク/U/-/-/-/-;ヲノゾク/U/-/-/-/-;ニヨル/U/-/-/-/-;ヲフクメル/U/-/-/-/->"], featureExtractor.getPlusChunks("本"))
  end

  def test_getNormalizedForm
    chunk = "* -1D <文末><SM-主体><SM-組織><体言><用言:判><体言止><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><提題受:30><主節><状態述語><正規化代表表記:国/くに?国/こく><主辞代表表記:国/くに?国/こく>"
    assert_equal("国/くに?国/こく", getNormalizedForm(chunk))
  end

  def test_mergeNormalizedForm
    assert_equal("国", mergeNormalizedForm("国/くに?国/こく"))
    assert_equal("いる", mergeNormalizedForm("居る/いる?射る/いる"))
  end



  def test_getCallFeature
    #君はインドネシアという国を知っていますか
    knpLines = <<ENDOFKNP
* 4D <文頭><SM-主体><SM-人><ハ><助詞><体言><一文字漢字><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><正規化代表表記:君/きみ><主辞代表表記:君/きみ>
+ 4D <文頭><SM-主体><SM-人><ハ><助詞><体言><一文字漢字><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><名詞項候補><先行詞候補><正規化代表表記:君/きみ><解析格:ガ>
君 きみ 君 名詞 6 普通名詞 1 * 0 * 0 "代表表記:君/きみ 漢字読み:訓 カテゴリ:人" <代表表記: 君/きみ><漢字読み:訓><カテゴリ:人><正規化代表表記:君/きみ><文頭><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><文節主辞>
は は は 助詞 9 副助詞 2 * 0 * 0 NIL <かな漢字><ひらがな><付属>
* 2D <地名><ト><助詞><体言><係:ト格><区切:0-4><隣係絶対><格要素><連用要素><正規化代表表記: インドネシア/いんどねしあ><主辞代表表記:インドネシア/いんどねしあ>
+ 2D <地名><ト><助詞><体言><係:ト格><区切:0-4><隣係絶対><格要素><連用要素><名詞項候補><先行詞候補><SM-場所><正規化代表表記:インドネシア/いんどねしあ>
インドネシア いんどねしあ インドネシア 名詞 6 地名 4 * 0 * 0 "代表表記:インドネシア/いんど ねしあ 地名:国" <代表表記:インドネシア/いんどねしあ><地名:国><正規化代表表記:インドネシア/ いんどねしあ><記英数カ><カタカナ><名詞相当語><自立><内容語><タグ単位始><文節始><固有キー>< 文節主辞>
と と と 助詞 9 格助詞 1 * 0 * 0 NIL <かな漢字><ひらがな><付属>
* 3D <補文ト><連体修飾><用言:動><受:隣のみ><隣受絶対><複合辞><係:連体><レベル:A-><区切:0-3><ID:（複合辞連体）><動態述語><正規化代表表記:言う/いう><主辞代表表記:言う/いう>
+ 3D <補文ト><連体修飾><用言:動><受:隣のみ><隣受絶対><複合辞><係:連体><レベル:A-><区切:0-3><ID:（複合辞連体）><動態述語><格解析なし><省略解析なし><不特定人:ガ><省略格指定><正規化代表表記:言う/いう><時制-未来>
いう いう いう 動詞 2 * 0 子音動詞ワ行 12 基本形 2 "代表表記:言う/いう 補文ト" <代表表記:言う/いう><補文ト><正規化代表表記:言う/いう><と基本形複合辞><かな漢字><ひらがな><活用語><自立><内容語><タグ単位始><文節始><文節主辞>
* 4D <SM-主体><SM-組織><ヲ><助詞><体言><一文字漢字><係:ヲ格><区切:0-0><格要素><連用要素><正規化代表表記:国/くに?国/こく><主辞代表表記:国/くに?国/こく>
+ 4D <SM-主体><SM-組織><ヲ><助詞><体言><一文字漢字><係:ヲ格><区切:0-0><格要素><連用要素><名詞項候補><先行詞候補><正規化代表表記:国/くに?国/こく><解析格:ヲ>
国 くに 国 名詞 6 普通名詞 1 * 0 * 0 "代表表記:国/くに 漢字読み:訓 地名末尾 カテゴリ:組織・団体;場所-その他 ドメイン:政治" <代表表記:国/くに><漢字読み:訓><地名末尾><カテゴリ:組織・団体;場所-その他><ドメイン:政治><正規化代表表記:国/くに?国/こく><品曖><ALT-国-こく-国-6-1-0-0-"代表表記:国/こく 漢字読み:音 地名末尾 カテゴリ:場所-その他"><品曖-普通名詞><原形曖昧><漢 字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><文節主辞>
を を を 助詞 9 格助詞 1 * 0 * 0 NIL <かな漢字><ひらがな><付属>
* -1D <文末><補文ト><カ><助詞><用言:動><レベル:C><区切:5-5><ID:（文末）><並キ:述:&ST:3.0&&&レベル:強><提題受:30><主節><動態述語><疑問><モダリティ-疑問><敬語:丁寧表現><正規化代表表記:知る/しる><主辞代表表記:知る/しる><並列類似度:-100.000>
+ -1D <文末><補文ト><カ><助詞><用言:動><レベル:C><区切:5-5><ID:（文末）><並キ:述:&ST:3.0&&&レベル:強><提題受:30><主節><動態述語><疑問><モダリティ-疑問><敬語:丁寧表現><正規化代表表記:知る/しる><用言代表表記:知る/しる><時制-未来><主題格:二人称優位><格関係0:ガ:君><格関係3:ヲ:国><格解析結果:知る/しる:動8:ガ/N/君/0/0/1;ヲ/C/国/3/0/1;ニ/U/-/-/-/-;ト/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;マデ/U/-/-/-/-;時間/U/-/-/-/-;外の関係/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;ヲツウジル/U/-/-/-/-;ニヨル/U/-/-/-/-;トスル/U/-/-/-/-;ガ２/U/-/-/-/-;ニツク/U/-/-/-/-;ニオク/U/-/-/-/-;ヲノゾク/U/-/-/-/-;ヲハジメル/U/-/-/-/->
知って しって 知る 動詞 2 * 0 子音動詞ラ行 10 タ系連用テ形 14 "代表表記:知る/しる 補文ト 自他動詞:自:知れる/しれる" <代表表記:知る/しる><補文ト><自他動詞:自:知れる/しれる><正規化代表表記:知る/しる><かな漢字><活用語><自立><内容語><タグ単位始><文節始><文節主辞>
い い いる 接尾辞 14 動詞性接尾辞 7 母音動詞 1 基本連用形 8 "代表表記:いる/いる" <代表表記:いる/いる><正規化代表表記:いる/いる><かな漢字><ひらがな><活用語><付属>
ます ます ます 接尾辞 14 動詞性接尾辞 7 動詞性接尾辞ます型 31 基本形 2 "代表表記:ます/ます" <代表表記:ます/ます><正規化代表表記:ます/ます><かな漢字><ひらがな><活用語><付属>
か か か 助詞 9 接続助詞 3 * 0 * 0 NIL <文末><表現文末><漢字><かな漢字><ひらがな><付属>
EOS
ENDOFKNP
    featureExtractor = FeatureExtractor.new("pseudoID", knpLines.split("\n"))
    assert_equal(["call:国"], featureExtractor.getCallFeature("インドネシア"))
  end

def test_getCfFeature
# "太郎が歩く"
    knpLines = <<ENDOFKNP
* 1D <文頭><人名><ガ><助詞><体言><係:ガ格><区切:0-0><格要素><連用要素><正規化代表表記:太郎/たろう><主辞代表表記:太郎/たろう>
+ 1D <文頭><人名><ガ><助詞><体言><係:ガ格><区切:0-0><格要素><連用要素><名詞項候補><先行詞候補><SM-人><SM-主体><正規化代表表記:太郎/たろう><解析格:ガ>
太郎 たろう 太郎 名詞 6 人名 5 * 0 * 0 "人名:日本:名:45:0.00106 疑似代表表記 代表表記:太郎/たろう" <人名:日本:名:45:0.00106><疑似代表表記><代表表記:太郎/たろう><正規化代表表記:太郎/たろう><文頭><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><固有キー><文節主辞>
が が が 助詞 9 格助詞 1 * 0 * 0 NIL <かな漢字><ひらがな><付属>
* -1D <文末><用言:動><レベル:C><区切:5-5><ID:（文末）><提題受:30><主節><動態述語><正規化代表表記:歩く/あるく><主辞代表表記:歩く/あるく>
+ -1D <文末><用言:動><レベル:C><区切:5-5><ID:（文末）><提題受:30><主節><動態述語><正規化代表表記:歩く/あるく><用言代表表記:歩く/あるく><時制-未来><主題格:一人称優位><格関係0:ガ:太郎><格解析結果:歩く/あるく:動12:ガ/C/太郎/0/0/1;ヲ/U/-/-/-/-;ニ/U/-/-/-/-;ト/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;ヘ/U/-/-/-/-;時間/U/-/-/-/-;外の関係/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;トスル/U/-/-/-/-;ニツク/U/-/-/-/-;ニムケル/U/-/-/-/-;ニソウ/U/-/-/-/-;トイウ/U/-/-/-/->
歩く あるく 歩く 動詞 2 * 0 子音動詞カ行 2 基本形 2 "代表表記:歩く/あるく" <代表表記:歩く/あるく><正規化代表表記:歩く/あるく><文末><表現文末><かな漢字><活用語><自立><内容語><タグ単位始><文節始><文節主辞>
EOS
ENDOFKNP
    featureExtractor = FeatureExtractor.new("pseudoID", knpLines.split("\n"))
    assert_equal(["cf:歩く:動:ガ格"], featureExtractor.getCfFeature("太郎"))
end

def test_getCfType
chunk = "+ -1D <文末><用言:動><レベル:C><区切:5-5><ID:（文末）><提題受:30><主節><動態述語><正規化代表表記:歩く/あるく><用言代表表記:歩く/あるく><時制-未来><主題格:一人称優位><格関係0:ガ:太郎><格解析結果:歩く/あるく:動12:ガ/C/太郎/0/0/1;ヲ/U/-/-/-/-;ニ/U/-/-/-/-;ト/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;ヘ/U/-/-/-/-;時間/U/-/-/-/-;外の関係/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;トスル/U/-/-/-/-;ニツク/U/-/-/-/-;ニムケル/U/-/-/-/-;ニソウ/U/-/-/-/-;トイウ/U/-/-/-/->"
assert_equal("ガ", getCfType(chunk, "太郎"))
end

def test_getDemoFeature
#それはこの本に書いてあったよ。
knpLines = <<ENDOFKNP
* 3D <文頭><ハ><助詞><体言><指示詞><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><正規化代表表記:それ/それ><主辞代表表記:それ/それ>
+ 3D <文頭><ハ><助詞><体言><指示詞><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><名詞項候補><省略解析対象指示詞><正規化代表表記:それ/それ><解析格:ガ>
それ それ それ 指示詞 7 名詞形態指示詞 1 * 0 * 0 "疑似代表表記 代表表記:それ/それ" <疑似代表表記><代表表記:それ/それ><正規化代表表記:それ/それ><文頭><かな漢字><ひらがな><自立><内容語><タグ単位始><文節始><文節主辞>
は は は 助詞 9 副助詞 2 * 0 * 0 NIL <かな漢字><ひらがな><付属>
* 2D <連体修飾><連体詞形態指示詞><係:連体><区切:0-4><正規化代表表記:この/この><主辞代表表記:この/この>
+ 2D <連体修飾><連体詞形態指示詞><係:連体><区切:0-4><正規化代表表記:この/この>
この この この 指示詞 7 連体詞形態指示詞 2 * 0 * 0 "疑似代表表記 代表表記:この/この" <疑似代表表記><代表表記:この/この><正規化代表表記:この/この><かな漢字><ひらがな><自立><内容語><タグ単位始><文節始><文節主辞>
* 3D <ニ><助詞><体言><一文字漢字><係:ニ格><区切:0-0><格要素><連用要素><正規化代表表記:本/ほん><主辞代表表記:本/ほん>
+ 3D <ニ><助詞><体言><一文字漢字><係:ニ格><区切:0-0><格要素><連用要素><名詞項候補><先行詞候補><正規化代表表記:本/ほん><解析格:ニ>
本 ほん 本 名詞 6 普通名詞 1 * 0 * 0 "代表表記:本/ほん 漢字読み:音 カテゴリ:人工物-その他;抽象物" <代表表記:本/ほん><漢字読み:音><カテゴリ:人工物-その他;抽象物><正規化代表表記:本/ほん><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><文節主辞>
に に に 助詞 9 格助詞 1 * 0 * 0 NIL <かな漢字><ひらがな><付属>
* -1D <文末><補文ト><時制-過去><句点><助詞><用言:動><レベル:C><区切:5-5><ID:（文末）><係:文末><提題受:30><主節><格要素><連用要素><動態述語><正規化代表表記:書く/かく><主辞代表表記:書く/かく>
+ -1D <文末><補文ト><時制-過去><句点><助詞><用言:動><レベル:C><区切:5-5><ID:（文末）><係:文末><提題受:30><主節><格要素><連用要素><動態述語><正規化代表表記:書く/かく><用言代表表記:書く/かく+ある/ある><主題格:一人称優位><格関係0:ガ:それ><格関係2:ニ:本><格解析結果:書く/かく+ある/ある:動4:ガ/N/それ/0/0/1;ヲ/U/-/-/-/-;ニ/C/本/2/0/1;ト/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;マデ/U/-/-/-/-;時間/U/-/-/-/-;外の関係/U/-/-/-/-;ノ/U/-/-/-/-;修飾/U/-/-/-/-;ニツク/U/-/-/-/-;トイウ/U/-/-/-/-;ニカンスル/U/-/-/-/-;トスル/U/-/-/-/-;ニヨル/U/-/-/-/-;ニトル/U/-/-/-/-;ヲハジメル/U/-/-/-/->
書いて かいて 書く 動詞 2 * 0 子音動詞カ行 2 タ系連用テ形 14 "代表表記:書く/かく 補文ト" <代表表記:書く/かく><補文ト><正規化代表表記:書く/かく><かな漢字><活用語><自立><内容語><タグ単位始><文節始><文節主辞>
あった あった ある 接尾辞 14 動詞性接尾辞 7 子音動詞ラ行 10 タ形 10 "代表表記:ある/ある" <代表表記:ある/ある><正規化代表表記:ある/ある><かな漢字><ひらがな><活用語><付属>
よ よ よ 助詞 9 終助詞 4 * 0 * 0 NIL <表現文末><かな漢字><ひらがな><付属>
。 。 。 特殊 1 句点 1 * 0 * 0 NIL <文末><英記号><記号><付属>
EOS
ENDOFKNP
    featureExtractor = FeatureExtractor.new("pseudoID", knpLines.split("\n"))
    assert_equal(["demo:この"], featureExtractor.getDemoFeature("本"))
end

def test_getSufFeature
#太郎さんが歩く。
knpLines = <<ENDOFKNP
* 1D <文頭><人名><ガ><助詞><体言><係:ガ格><区切:0-0><格要素><連用要素><正規化代表表記:太郎/たろう><主辞代表表記:太郎/たろう>
+ 1D <文頭><人名><ガ><助詞><体言><係:ガ格><区切:0-0><格要素><連用要素><名詞項候補><先行詞候補><SM-人><SM-主体><正規化代表表記:太郎/たろう><解析格:ガ>
太郎 たろう 太郎 名詞 6 人名 5 * 0 * 0 "人名:日本:名:45:0.00106 疑似代表表記 代表表記:太郎/たろう" <人名:日本:名:45:0.00106><疑似代表表記><代表表記:太郎/たろう><正規化代表表記:太郎/たろう><文頭><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><固有キー><文節主辞>
さん さん さん 接尾辞 14 名詞性名詞接尾辞 2 * 0 * 0 "代表表記:さん/さん" <代表表記:さん/さん><正規化代表表記:さん/さん><呼掛><かな漢字><ひらがな><名詞相当語><付属>
が が が 助詞 9 格助詞 1 * 0 * 0 NIL <かな漢字><ひらがな><付属>
* -1D <文末><句点><用言:動><レベル:C><区切:5-5><ID:（文末）><係:文末><提題受:30><主節><格要素><連用要素><動態述語><正規化代表表記:歩く/あるく><主辞代表表記:歩く/あるく>
+ -1D <文末><句点><用言:動><レベル:C><区切:5-5><ID:（文末）><係:文末><提題受:30><主節><格要素><連用要素><動態述語><正規化代表表記:歩く/あるく><用言代表表記:歩く/あるく><時制-未来><主題格:一人称優位><格関係0:ガ:太郎><格解析結果:歩く/あるく:動12:ガ/C/太郎/0/0/1;ヲ/U/-/-/-/-;ニ/U/-/-/-/-;ト/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;ヘ/U/-/-/-/-;時間/U/-/-/-/-;外の関係/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;トスル/U/-/-/-/-;ニツク/U/-/-/-/-;ニムケル/U/-/-/-/-;ニソウ/U/-/-/-/-;トイウ/U/-/-/-/->
歩く あるく 歩く 動詞 2 * 0 子音動詞カ行 2 基本形 2 "代表表記:歩く/あるく" <代表表記:歩く/あるく><正規化代表表記:歩く/あるく><表現文末><かな漢字><活用語><自立><内容語><タグ単位始><文節始><文節主辞>
。 。 。 特殊 1 句点 1 * 0 * 0 NIL <文末><英記号><記号><付属>
EOS
ENDOFKNP
    featureExtractor = FeatureExtractor.new("pseudoID", knpLines.split("\n"))
    assert_equal(["suf:さん"], featureExtractor.getSufFeature("太郎"))
end

def test_getNcf1Feature
#それは太郎の部屋に置いてあります。
knpLines = <<ENDOFKNP
* 3D <文頭><ハ><助詞><体言><指示詞><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><正規化代表表記:それ/それ><主辞代表表記:それ/それ>
+ 3D <文頭><ハ><助詞><体言><指示詞><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><名詞項候補><省略解析対象指示詞><正規化代表表記:それ/それ><解析格:ガ>
それ それ それ 指示詞 7 名詞形態指示詞 1 * 0 * 0 "疑似代表表記 代表表記:それ/それ" <疑似代表表記><代表表記:それ/それ><正規化代表表記:それ/それ><文頭><かな漢字><ひらがな><自立><内容語><タグ単位始><文節始><文節主辞>
は は は 助詞 9 副助詞 2 * 0 * 0 NIL <かな漢字><ひらがな><付属>
* 2D <人名><助詞><連体修飾><体言><係:ノ格><区切:0-4><正規化代表表記:太郎/たろう><主辞代表表記:太郎/たろう>
+ 2D <人名><助詞><連体修飾><体言><係:ノ格><区切:0-4><名詞項候補><先行詞候補><SM-人><SM-主体><係チ:非用言格解析||用言&&文節内:Ｔ解析格-ヲ><正規化代表表記:太郎/たろう>
太郎 たろう 太郎 名詞 6 人名 5 * 0 * 0 "人名:日本:名:45:0.00106 疑似代表表記 代表表記:太郎/たろう" <人名:日本:名:45:0.00106><疑似代表表記><代表表記:太郎/たろう><正規化代表表記:太郎/たろう><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><固有キー><文節主辞>
の の の 助詞 9 接続助詞 3 * 0 * 0 NIL <かな漢字><ひらがな><付属>
* 3D <ニ><助詞><体言><係:ニ格><区切:0-0><格要素><連用要素><正規化代表表記:部屋/へや><主辞代表表記:部屋/へや>
+ 3D <ニ><助詞><体言><係:ニ格><区切:0-0><格要素><連用要素><名詞項候補><先行詞候補><正規化代表表記:部屋/へや><解析格:ニ>
部屋 へや 部屋 名詞 6 普通名詞 1 * 0 * 0 "代表表記:部屋/へや カテゴリ:場所-施設 ドメイン:家庭・暮らし" <代表表記:部屋/へや><カテゴリ:場所-施設><ドメイン:家庭・暮らし><正規化代表表記:部屋/へや><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><文節主辞>
に に に 助詞 9 格助詞 1 * 0 * 0 NIL <かな漢字><ひらがな><付属>
* -1D <文末><句点><用言:動><レベル:C><区切:5-5><ID:（文末）><係:文末><提題受:30><主節><格要素><連用要素><動態述語><敬語:丁寧表現><正規化代表表記:置く/おく><主辞代表表記:置く/おく>
+ -1D <文末><句点><用言:動><レベル:C><区切:5-5><ID:（文末）><係:文末><提題受:30><主節><格要素><連用要素><動態述語><敬語:丁寧表現><正規化代表表記:置く/おく><用言代表表記:置く/おく+ある/ある><時制-未来><主題格:一人称優位><格関係0:ガ:それ><格関係2:ニ:部屋><格解析結果:置く/おく+ある/ある:動3:ガ/N/それ/0/0/1;ニ/C/部屋/2/0/1;ト/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;マデ/U/-/-/-/-;時間/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;トスル/U/-/-/-/-;ガ２/U/-/-/-/-;ニソウ/U/-/-/-/-;ニヨル/U/-/-/-/-;ヲハジメル/U/-/-/-/-;ニツク/U/-/-/-/-;ニムケル/U/-/-/-/-;ニタイスル/U/-/-/-/-;外の関係/U/-/-/-/->
置いて おいて 置く 動詞 2 * 0 子音動詞カ行 2 タ系連用テ形 14 "代表表記:置く/おく" <代表表記:置く/おく><正規化代表表記:置く/おく><かな漢字><活用語><自立><内容語><タグ単位始><文節始><文節主辞>
あり あり ある 接尾辞 14 動詞性接尾辞 7 子音動詞ラ行 10 基本連用形 8 "代表表記:ある/ある" <代表表記:ある/ある><正規化代表表記:ある/ある><かな漢字><ひらがな><活用語><付属>
ます ます ます 接尾辞 14 動詞性接尾辞 7 動詞性接尾辞ます型 31 基本形 2 "代表表記:ます/ます" <代表表記:ます/ます><正規化代表表記:ます/ます><表現文末><かな漢字><ひらがな><活用語><付属>
。 。 。 特殊 1 句点 1 * 0 * 0 NIL <文末><英記号><記号><付属>
EOS
ENDOFKNP
    featureExtractor = FeatureExtractor.new("pseudoID", knpLines.split("\n"))
    assert_equal(["ncf1:部屋"], featureExtractor.getNcf1Feature("太郎"))
end

end
